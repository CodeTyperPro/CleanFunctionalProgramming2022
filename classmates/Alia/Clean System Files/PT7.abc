.comp 920 0101110100100
.start __PT7_Start
.depend "_SystemEnumStrict"
.depend "_SystemStrictLists"
.depend "StdStrictLists"
.depend "_SystemEnum"
.depend "StdEnum"
.depend "StdMisc"
.depend "StdFunctions"
.depend "StdCharList"
.depend "StdTuple"
.depend "StdOrdList"
.depend "StdList"
.depend "StdClass"
.depend "StdFile"
.depend "StdString"
.depend "_SystemArray"
.depend "StdArray"
.depend "StdChar"
.depend "StdReal"
.depend "StdInt"
.depend "StdOverloaded"
.depend "StdBool"
.depend "StdEnv"
.endinfo
.module m_PT7 "PT7"
.impmod _system
.implab _cycle_in_spine
.implab _type_error
.implab _hnf
.impdesc e_system_dind
.implab e_system_nind e_system_eaind
.impdesc e_system_dif
.implab e_system_nif e_system_eaif
.implab e_system_sif
.impdesc e_system_dAP
.implab e_system_nAP e_system_eaAP
.implab e_system_sAP
.impdesc ARRAY
.impdesc _Nil
.impdesc _Cons
.impdesc _Conss
.implab n_Conss ea_Conss
.impdesc _Consts
.implab n_Consts ea_Consts
.impdesc _Conssts
.implab n_Conssts ea_Conssts
.impdesc _Tuple
.impdesc d_S.1
.implab n_S.1 ea_S.1
.impdesc d_S.2
.implab n_S.2 ea_S.2
.impdesc d_S.3
.implab n_S.3 ea_S.3
.impdesc d_S.4
.implab n_S.4 ea_S.4
.impdesc d_S.5
.implab n_S.5 ea_S.5
.impdesc d_S.6
.implab n_S.6 ea_S.6
.implab _driver
.impmod StdMisc
.implab e_StdMisc_sabort
.impmod StdInt
.implab e_StdInt_sisEven;18
.implab e_StdInt_sisOdd;19
.desc d11 _hnf _add_arg 3 0 "Node"
.desc d12 _hnf _hnf 0 0 "Leaf"
.export __PT7_Start
.o 0 0
__PT7_Start
	build _ 0 n6
.d 1 0
	jmp _driver
.n 0 _
.o 1 0
n6
	push_node _cycle_in_spine 0
.d 0 0
	jsr ea6
.o 0 1 b
	fillB_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 0 0
ea6
.o 0 0
s6
	create
.d 1 0
	jsr s3
.o 1 0
.d 1 0
	jmp s5
.o 1 0
s5
	eq_desc d12 0 0
	jmp_true case.1
	jmp case.2
case.1
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
case.2
	repl_args 3 3
	pop_a 1
	jsr_eval 0
	eq_desc d12 0 0
	jmp_true case.3
	jmp case.4
case.3
	jsr_eval 1
	eq_desc d12 0 1
	jmp_true case.5
	jmp case.6
case.5
	pop_a 2
	pushB TRUE
.d 0 1 b
	rtn
case.6
	push_a 1
	updatepop_a 0 1
.d 1 0
	jsr s4
.o 0 1 i
	pushI 1
	and%
	pushI 0
	eqI
	notB
	jmp_false else.7
	push_a 0
	updatepop_a 0 1
.d 1 0
	jmp s5
else.7
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
case.4
	jsr_eval 1
	eq_desc d12 0 1
	jmp_true case.8
	jmp case.9
case.8
	push_a 0
	update_a 1 2
	updatepop_a 0 1
.d 1 0
	jsr s4
.o 0 1 i
	pushI 1
	and%
	pushI 0
	eqI
	jmp_false else.10
	push_a 0
	updatepop_a 0 1
.d 1 0
	jmp s5
else.10
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
case.9
	push_a 0
.d 1 0
	jsr s4
.o 0 1 i
	pushI 1
	and%
	pushI 0
	eqI
	jmp_false else.11
	push_a 1
.d 1 0
	jsr s4
.o 0 1 i
	pushI 1
	and%
	pushI 0
	eqI
	notB
	jmp_false else.12
	push_a 0
	updatepop_a 0 1
.d 1 0
	jsr s5
.o 0 1 b
	jmp_false else.13
	push_a 0
	updatepop_a 0 1
.d 1 0
	jmp s5
else.13
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
else.12
	pop_a 2
	pushB FALSE
.d 0 1 b
	rtn
else.11
	pop_a 2
	pushB FALSE
.d 0 1 b
	rtn
.o 1 0
s4
	eq_desc d12 0 0
	jmp_true case.14
	jmp case.15
case.14
	buildAC "Invalid"
	updatepop_a 0 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	pushI_a 0
	pop_a 1
.d 0 1 i
	rtn
case.15
	repl_args 3 3
	update_a 0 2
	pop_a 2
	jsr_eval 0
	pushI_a 0
	pop_a 1
.d 0 1 i
	rtn
.o 1 0
s3
	buildh d12 0
	buildh d12 0
	buildI 2
	buildh d11 3
	buildh d12 0
	buildI 5
	buildh d11 3
	buildh d12 0
	buildh d12 0
	buildI 6
	buildh d11 3
	buildI 3
	buildh d11 3
	buildh d12 0
	buildh d12 0
	buildI 7
	buildh d11 3
	buildh d12 0
	buildh d12 0
	buildh d12 0
	buildI 8
	buildh d11 3
	buildI 4
	buildh d11 3
	buildI 2
	buildh d11 3
	buildI 10
	fillh d11 3 3
.d 1 0
	rtn
