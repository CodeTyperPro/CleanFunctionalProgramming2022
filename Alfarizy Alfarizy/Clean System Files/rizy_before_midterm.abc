.comp 920 000111010010000
.start __rizy_before_midterm_Start
.depend "_SystemEnumStrict" "20211222162233"
.depend "_SystemStrictLists" "20211222162233"
.depend "StdStrictLists" "20211222162231"
.depend "_SystemEnum" "20211222162228"
.depend "StdEnum" "20211222162231"
.depend "StdMisc" "20211222162231"
.depend "StdFunctions" "20211222162231"
.depend "StdCharList" "20211222162235"
.depend "StdTuple" "20211222162233"
.depend "StdOrdList" "20211222162235"
.depend "StdList" "20221019182753"
.depend "StdClass" "20211222162233"
.depend "StdFile" "20211222162231"
.depend "StdString" "20211222162235"
.depend "_SystemArray" "20211222162231"
.depend "StdArray" "20211222162233"
.depend "StdChar" "20211222162228"
.depend "StdReal" "20211222162231"
.depend "StdInt" "20211222162231"
.depend "StdOverloaded" "20220924132147"
.depend "StdBool" "20211222162231"
.depend "StdEnv" "20211222162231"
.module m_rizy_before_midterm "rizy_before_midterm" "20221020180604"
.endinfo
.impmod _system
.implab _cycle_in_spine
.implab _type_error
.implab _hnf
.impdesc e_system_dind
.implab e_system_nind e_system_eaind
.impdesc e_system_dif
.implab e_system_nif e_system_eaif
.implab e_system_sif
.impdesc e_system_dAP
.implab e_system_nAP e_system_eaAP
.implab e_system_sAP
.impdesc ARRAY
.impdesc _Nil
.impdesc _Cons
.impdesc _Conss
.implab n_Conss ea_Conss
.impdesc _Consts
.implab n_Consts ea_Consts
.impdesc _Conssts
.implab n_Conssts ea_Conssts
.impdesc _Tuple
.impdesc d_S.1
.implab n_S.1 ea_S.1
.impdesc d_S.2
.implab n_S.2 ea_S.2
.impdesc d_S.3
.implab n_S.3 ea_S.3
.impdesc d_S.4
.implab n_S.4 ea_S.4
.impdesc d_S.5
.implab n_S.5 ea_S.5
.impdesc d_S.6
.implab n_S.6 ea_S.6
.implab _driver
.impmod StdList
.impdesc e_StdList_dlength;47
.implab e_StdList_nlength;47
.impmod StdInt
.implab e_StdInt_s+;6
.implab e_StdInt_sone;11
.impdesc e_StdInt_d==;16
.implab e_StdInt_n==;16
.implab e_StdInt_s<;17
.impmod StdBool
.implab e_StdBool_snot
.export __rizy_before_midterm_Start
.o 0 0
__rizy_before_midterm_Start
	build _ 0 n1
.d 1 0
	jmp _driver
.n 0 _
.o 1 0
n1
	push_node _cycle_in_spine 0
.d 0 0
	jsr ea1
.o 0 1 b
	fillB_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 0 0
ea1
.o 0 0
s1
	buildh d8 0
	buildh _Nil 0
	buildh _Nil 0
	buildAC "b"
	buildh ARRAY 1
	buildh _Cons 2
	buildAC "a"
	buildh ARRAY 1
	buildh _Cons 2
	buildh _Cons 2
	buildh _Nil 0
	buildAC "a"
	buildh ARRAY 1
	buildh _Cons 2
	buildh _Cons 2
.d 2 0
	jmp s3
.desc d8 _hnf l8 1 0 "_f0"
.o 2 0
l8
	update_a 1 0
	create
	update_a 0 2
	pop_a 1
.o 2 0
ea8
.o 2 0
s8
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 5
	pop_a 1
	addI
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 0
s3
	push_a 0
	build e_StdList_dlength;47 1 e_StdList_nlength;47
	create
	buildI 1
	push_a 3
	push_a 5
	push_a 4
	update_a 4 5
	update_a 0 4
	pop_a 1
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 5 0
	jsr s4
.o 1 0
	buildB TRUE
.d 2 0
	jmp s2
.n 4 _ ea4
.o 1 0
n4
	push_node _cycle_in_spine 4
.o 5 0
ea4
	jsr_eval 1
.o 5 0
s4
	push_a 0
	push_a 3
	push_a 5
	push_a 4
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 5 0
	jmp s5
.o 5 0
s5
	eq_desc _Cons 2 0
	jmp_true case.1
	jmp case.2
case.1
	repl_args 2 2
	push_a 3
	jsr_eval 0
	pushI_a 4
	pop_a 1
	push_a 2
	jsr_eval 0
	pushI_a 3
	pop_a 1
	ltI
	notB
	jmp_false else.3
	push_a 3
	build _ 1 n9
	push_a 3
	push_a 3
	push_a 7
	push_a 3
	update_a 3 4
	update_a 0 3
	pop_a 1
	build _ 4 n4
	push_a 4
	push_a 6
	build e_system_dAP 2 e_system_nAP
	push_a 2
	build e_StdList_dlength;47 1 e_StdList_nlength;47
	push_a 7
	build e_system_dAP 2 e_system_nAP
	build _ 2 e_StdInt_n==;16
	fillh _Cons 2 7
	pop_a 5
.d 1 0
	rtn
else.3
	fillh _Nil 0 5
	pop_a 5
.d 1 0
	rtn
case.2
	fillh _Nil 0 4
	pop_a 4
.d 1 0
	rtn
.n 1 _ ea9
.o 1 0
n9
	push_node _cycle_in_spine 1
.o 2 0
ea9
.o 2 0
s9
	pushI 1
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pop_a 1
	addI
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 0
s2
	eq_desc _Nil 0 1
	jmp_true case.4
	jmp case.5
case.4
	pushB_a 0
	pop_a 2
.d 0 1 b
	rtn
case.5
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 0
	jsr_eval 0
	pushB_a 1
	pop_a 1
	jmp_false else.6
	push_a 1
	jsr_eval 0
	push_a 3
	update_a 1 5
	updatepop_a 0 4
.d 2 0
	jmp s2
else.6
	pop_a 4
	pushB FALSE
.d 0 1 b
	rtn
